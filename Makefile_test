NAME = minishell

#CC = gcc
#INCL = includes
#CFLAGS = -Wall -Wextra -Werror $(pkg-config --cflags --libs readline) -g -I$(INCL)
#RM = rm -f
#LIBFT = libft/
#LIBFT_A = $(addprefix $(LIBFT), libft.a)

CC          =   gcc
INCL        =   includes
READLINE_DIR=   /opt/homebrew/opt/readline
CFLAGS      =   -Wall -Wextra -Werror -g -I$(INCL) -I$(READLINE_DIR)/include
LDFLAGS     =   -L$(READLINE_DIR)/lib
LDLIBS      =   -lreadline -lhistory
RM          =   rm -f
LIBFT       =   libft/
LIBFT_A     =   $(addprefix $(LIBFT), libft.a)

SRCDIR = src/
LEXERDIR = src/lexer/
UTILSDIR = src/utils/
OBJDIR = build/obj/


SRC = src/main.c \
src/verify_quotes.c \
src/lexer/tokenizer.c \
src/lexer/utils_lexer.c \
src/lexer/utils_nodes.c \
src/lexer/utils_nodes_aux.c \
src/parser/parser.c \
src/parser/redirections.c \
src/parser/utils_parser.c \
src/parser/utils_nodes.c \
src/executor/executor.c \
src/executor/hdoc.c \
src/executor/run_cmds.c \
src/executor/redirections.c \
src/executor/utils.c \
src/utils/utils.c \
src/utils/mini_live.c \
src/errors/parser_errors.c \
src/builtins/builtin_echo.c \
src/builtins/builtin_pwd.c \
src/builtins/builtin_env.c \
src/builtins/builtin_exit.c \
src/builtins/builtin_utils_nodes.c \
src/builtins/builtin_export.c\
src/builtins/builtin_export_helper.c\
src/builtins/builtin_unset.c\
src/expander/utils_expander.c\
src/builtins/builtin_cd.c \
src/utils/signals.c \


#OBJS = $(addprefix $(OBJDIR), $(notdir $(patsubst %.c, %.o, $(src))))
OBJS = $(SRC:%.c=%.o)

all: $(NAME)

$(NAME):	$(OBJS) $(LIBFT_A) Makefile #norm
		@$(CC) $(CFLAGS) $(LDFLAGS)  -L$(LIBFT) -o $(NAME) $(OBJS) -lft $(LDLIBS)
		@echo "Linked into executable \033[0;32mminishell\033[0m with norminette \033[0;32mOK\033[0m."

$(LIBFT_A):
		@$(MAKE) -s -C $(LIBFT)
		@echo "Compiled $(LIBFT_A)."

#$(OBJDIR)%.o:: $(PATHS)%.c
.c.o:
		@$(CC) $(CFLAGS) -c $< -o $@
		@echo "Compiling $<."

norm:
		norminette -R CheckForbiddenSourceHeader $(SRC)
		norminette -R CheckDefine $(INCL)

clean:
		@$(MAKE) clean -s -C $(LIBFT)
		@echo "Clean libft."
		@$(RM) $(OBJS)
		@echo "Removed object files."

fclean: clean
		@$(MAKE) fclean -s -C $(LIBFT)
		@echo "Full clean libft."
		@$(RM) $(NAME)
		@echo "Removed executable."

re: fclean all

PHONY: all clean fclean re norm