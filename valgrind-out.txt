==819497== Memcheck, a memory error detector
==819497== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==819497== Using Valgrind-3.23.0.GIT-lbmacos and LibVEX; rerun with -h for copyright info
==819497== Command: ./minishell
==819497== Parent PID: 788366
==819497== 
==819499== Invalid read of size 1
==819499==    at 0x10AF69: ft_exec_cmd (run_cmds.c:29)
==819499==    by 0x10B356: handle_single_cmd (run_cmds.c:113)
==819499==    by 0x10B61C: pre_executor (utils_executor.c:19)
==819499==    by 0x10BA0C: mini_live (mini_live.c:37)
==819499==    by 0x109515: main (main.c:30)
==819499==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==819499== 
==819499== 
==819499== Process terminating with default action of signal 11 (SIGSEGV)
==819499==  Access not within mapped region at address 0x0
==819499==    at 0x10AF69: ft_exec_cmd (run_cmds.c:29)
==819499==    by 0x10B356: handle_single_cmd (run_cmds.c:113)
==819499==    by 0x10B61C: pre_executor (utils_executor.c:19)
==819499==    by 0x10BA0C: mini_live (mini_live.c:37)
==819499==    by 0x109515: main (main.c:30)
==819499==  If you believe this happened as a result of a stack
==819499==  overflow in your program's main thread (unlikely but
==819499==  possible), you can try to increase the size of the
==819499==  main thread stack using the --main-stacksize= flag.
==819499==  The main thread stack size used in this run was 8388608.
==819499== 
==819499== HEAP SUMMARY:
==819499==     in use at exit: 223,895 bytes in 484 blocks
==819499==   total heap usage: 746 allocs, 262 frees, 241,506 bytes allocated
==819499== 
==819499== LEAK SUMMARY:
==819499==    definitely lost: 0 bytes in 0 blocks
==819499==    indirectly lost: 0 bytes in 0 blocks
==819499==      possibly lost: 0 bytes in 0 blocks
==819499==    still reachable: 223,895 bytes in 484 blocks
==819499==         suppressed: 0 bytes in 0 blocks
==819499== Reachable blocks (those to which a pointer was found) are not shown.
==819499== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==819499== 
==819499== For lists of detected and suppressed errors, rerun with: -s
==819499== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
==819497== 
==819497== HEAP SUMMARY:
==819497==     in use at exit: 208,275 bytes in 233 blocks
==819497==   total heap usage: 778 allocs, 545 frees, 241,927 bytes allocated
==819497== 
==819497== 33 bytes in 1 blocks are definitely lost in loss record 23 of 73
==819497==    at 0x4848889: malloc (in /home/anovio-c/.brew/Cellar/valgrind/HEAD-93191c1/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==819497==    by 0x110ABF: ft_strdup (in /home/anovio-c/Desktop/minilinux/minishell)
==819497==    by 0x10E06C: get_pwd (builtin_pwd.c:24)
==819497==    by 0x10BAB3: init_mini (mini_live.c:56)
==819497==    by 0x109509: main (main.c:29)
==819497== 
==819497== LEAK SUMMARY:
==819497==    definitely lost: 33 bytes in 1 blocks
==819497==    indirectly lost: 0 bytes in 0 blocks
==819497==      possibly lost: 0 bytes in 0 blocks
==819497==    still reachable: 208,242 bytes in 232 blocks
==819497==         suppressed: 0 bytes in 0 blocks
==819497== Reachable blocks (those to which a pointer was found) are not shown.
==819497== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==819497== 
==819497== For lists of detected and suppressed errors, rerun with: -s
==819497== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
